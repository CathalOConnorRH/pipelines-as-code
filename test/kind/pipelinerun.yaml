# Copyright 2021 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: kind
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/displayName: "kind"
    tekton.dev/tags: "kind"
spec:
  description: >-
    Sets up and executes commands in KinD (Kubernetes in Docker) environment.

    See https://kind.sigs.k8s.io for more details.
  params:
    - name: command
      type: array
      description: command to run inside kind environment.
    - name: image
      type: string
      description: Task runtime image. Should typically contain the kind CLI (https://kind.sigs.k8s.io)
  workspaces:
    - name: source
    - name: dockerconfig
      optional: true
  steps:
    - image: $(params.image)
      workingDir: $(workspaces.source.path)
      name: kind
      volumeMounts:
        - mountPath: /var/run/
          name: dind-socket
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
      command: ["$(params.command[*])"]
  sidecars:
    - image: docker:latest
      name: dind
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/docker
          name: dind-storage
        - mountPath: /var/run/
          name: dind-socket
  volumes:
    - name: dind-storage
      emptyDir: {}
    - name: dind-socket
      emptyDir: {}
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: kind
spec:
  pipelineSpec:
    workspaces:
      - name: workspace
      - name: dockerconfig
        optional: true
    tasks:
      - name: git
        taskRef:
          name: git-clone
        params:
          - name: url
            value: https://github.com/chmouel/pipelines-as-code
          - name: revision
            value: kind
        workspaces:
          - name: output
            workspace: workspace
      - name: kind
        taskRef:
          name: kind
        params:
          - name: command
            value: ["$(workspaces.source.path)/test/kind/run.sh", "$(workspaces.dockerconfig.path)"]
          - name: image
            value: gcr.io/tekton-releases/dogfooding/kind-runner@sha256:bfe11e36d3d44ac89e5e9b39382c9b3638f5a3fedc3dc45b54ade8bb0248286d
        workspaces:
          - name: source
            workspace: workspace
          - name: dockerconfig
            workspace: dockerconfig
        runAfter:
          - git
  workspaces:
    - name: workspace
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 100M
